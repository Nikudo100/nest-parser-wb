generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_URI")
}

model Product {
  id              Int                  @id @default(autoincrement())
  nmId            Int                  @unique
  test            String?
  imtId           Int?
  name            String?
  brand           String?
  image           String?
  supplier        String?
  supplierId      Int?
  supplierRating  Float?
  rating          Float?
  reviewRating    Float?
  feedbacks       Int?
  price           Int?
  totalQuantity   Int?
  is_our_product  Boolean              @default(false)
  colors          Json?
  isDeleted       Boolean              @default(false)
  parsedAt        DateTime             @default(now())
  cartUrl         CartUrl?             @relation("ProductToCartUrl")
  stockHistory    DailyStockSnapshot[] @relation("ProductToStockHistory")
  cart            ProductCart?         @relation("ProductToCart")
  warehouseStocks WarehouseStock[]     @relation("ProductToWarehouseStock")

  @@index([nmId])
}

model ProductCart {
  nmId           Int      @unique
  imtId          Int?
  slug           String?
  name           String?
  vendorCode     String?
  description    String?
  options        Json?
  groupedOptions Json?
  certificate    Json?
  fullColors     Json?
  selling        Json?
  media          Json?
  data           Json?
  nmColorsNames  String?
  contents       String?
  hasRich        Boolean?
  parsedAt       DateTime @default(now())
  product        Product  @relation("ProductToCart", fields: [nmId], references: [nmId], onDelete: Cascade)

  @@index([nmId])
}

model DailyStockSnapshot {
  id         Int      @id @default(autoincrement())
  date       DateTime @db.Date
  totalStock Int
  productId  Int
  product    Product  @relation("ProductToStockHistory", fields: [productId], references: [id], onDelete: Cascade)

  @@unique([productId, date])
}

model WarehouseStock {
  id        Int      @id @default(autoincrement())
  wh        Int
  dtype     Int?
  dist      Int?
  qty       Int
  priority  Int?
  time1     Int?
  time2     Int?
  sizeName  String?
  sizeRank  Int?
  optionId  Int?
  productId Int
  createdAt DateTime @default(now()) @db.Date
  product   Product  @relation("ProductToWarehouseStock", fields: [productId], references: [id], onDelete: Cascade)

  @@index([productId])
}

model CartUrl {
  url       String
  nmId      Int      @unique
  createdAt DateTime @default(now())
  product   Product  @relation("ProductToCartUrl", fields: [nmId], references: [nmId], onDelete: Cascade)

  @@index([nmId])
}
